{"version":3,"file":"static/js/870.595eb7be.chunk.js","mappings":"8SAEMA,EAAM,mCACNC,EAAcC,EAAAA,EAAAA,OAAa,CAC/BC,QAAS,kCAELC,EAAW,iBAGV,SAAeC,IAAtB,+B,aAAO,O,oBAAA,oGACaJ,EAAYK,IAAZ,oCAA6CN,IAD1D,cACCM,EADD,yBAEEA,EAAIC,KAAKC,SAFX,kEAMA,SAAeC,EAAtB,oC,aAAO,O,oBAAA,WAA8BC,EAAOC,GAArC,uFACaV,EAAYK,IAAZ,gCACSN,EADT,YACgBI,EADhB,kBACkCM,EADlC,iBACgDC,EADhD,yBADb,cACCL,EADD,yBAIEA,EAAIC,KAAKC,SAJX,kEAQA,SAAeI,EAAtB,kC,aAAO,O,oBAAA,WAA+BC,GAA/B,uFACaZ,EAAYK,IAAZ,iBAA0BO,EAA1B,oBAAwCb,EAAxC,YAA+CI,IAD5D,cACCE,EADD,yBAEEA,EAAIC,MAFN,kEAMA,SAAeO,EAAtB,kC,aAAO,O,oBAAA,WAA+BD,GAA/B,uFACaZ,EAAYK,IAAZ,iBACNO,EADM,4BACgBb,EADhB,YACuBI,IAFpC,cACCE,EADD,yBAIEA,EAAIC,MAJN,kEAQA,SAAeQ,EAAtB,iDAAO,OAAP,oBAAO,WAA+BF,EAAIF,GAAnC,uFACaV,EAAYK,IAAZ,iBACNO,EADM,4BACgBb,EADhB,YACuBI,EADvB,iBACwCO,IAFrD,cACCL,EADD,yBAIEA,EAAIC,MAJN,kE,qGCnCMS,EAAc,SAAC,GAAqC,IAAD,IAAlCC,OAAUC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,QAC9C,OACE,iCACE,oCAAYD,MACZ,uBAAIC,MAGT,E,oCCPYC,EAAMC,EAAAA,GAAAA,IAAH,qGAOHC,EAAcD,EAAAA,GAAAA,GAAH,mFC6BxB,EAhCgB,WACd,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRb,EAAAA,EAAAA,IAAgBQ,EAAS,GACtBM,MAAK,SAAAtB,GAAI,OAAIoB,EAAWpB,EAAKC,QAApB,IACTsB,MAAMC,QAAQC,MAClB,GAAE,CAACT,IAEAG,EAAQO,OAAS,GAEjB,SAACb,EAAD,WACE,wEAMJ,SAACA,EAAD,WACE,SAACE,EAAD,UACGI,EAAQQ,KAAI,SAAAjB,GAAM,OACjB,yBACE,SAACD,EAAD,CAAaC,OAAQA,KADdA,EAAOJ,GADC,OAQ1B,C","sources":["Api/Api.js","components/ReviewsItem/ReviewsItem.jsx","components/Reviews/Style.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '307015ca02e8a519abbd25ab35659215';\nconst axiosMovies = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\nconst LANGUAGE = 'language=en-US';\n\n// список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nexport async function getTrending() {\n  const get = await axiosMovies.get(`/trending/all/day?api_key=${KEY}`);\n  return get.data.results;\n}\n\n// пошук фільму за ключовим словом на сторінці фільмів.\nexport async function getSearchMovie(query, page) {\n  const get = await axiosMovies.get(\n    `/search/movie?api_key=${KEY}&${LANGUAGE}&query=${query}&page=${page}&include_adult=false`\n  );\n  return get.data.results;\n}\n\n// запит повної інформації про фільм для сторінки кінофільму.\nexport async function getMovieDetails(id) {\n  const get = await axiosMovies.get(`/movie/${id}?api_key=${KEY}&${LANGUAGE}`);\n  return get.data;\n}\n\n// запит інформації про акторський склад для сторінки кінофільму.\nexport async function getMovieCredits(id) {\n  const get = await axiosMovies.get(\n    `/movie/${id}/credits?api_key=${KEY}&${LANGUAGE}`\n  );\n  return get.data;\n}\n\n// запит оглядів для сторінки кінофільму.\nexport async function getMovieReviews(id, page) {\n  const get = await axiosMovies.get(\n    `/movie/${id}/reviews?api_key=${KEY}&${LANGUAGE}&page=${page}`\n  );\n  return get.data;\n}\n","import PropTypes from 'prop-types';\n\nexport const ReviewsItem = ({ review: { author, content } }) => {\n  return (\n    <>\n      <b>Auther: {author}</b>\n      <p>{content}</p>\n    </>\n  );\n};\n\nReviewsItem.propTypes = {\n  review: PropTypes.shape({\n    author: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n  }),\n};","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  padding: 15px;\n`;\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\n","import { getMovieReviews } from 'Api/Api';\nimport { ReviewsItem } from 'components/ReviewsItem/ReviewsItem';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box, ReviewsList } from './Style';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getMovieReviews(movieId, 1)\n      .then(data => setReviews(data.results))\n      .catch(console.error);\n  }, [movieId]);\n\n  if (reviews.length < 1) {\n    return (\n      <Box>\n        <p>We don't have any reviews for this movie.</p>\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <ReviewsList>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <ReviewsItem review={review} />\n          </li>\n        ))}\n      </ReviewsList>\n    </Box>\n  );\n};\n\nexport default Reviews;\n"],"names":["KEY","axiosMovies","axios","baseURL","LANGUAGE","getTrending","get","data","results","getSearchMovie","query","page","getMovieDetails","id","getMovieCredits","getMovieReviews","ReviewsItem","review","author","content","Box","styled","ReviewsList","movieId","useParams","useState","reviews","setReviews","useEffect","then","catch","console","error","length","map"],"sourceRoot":""}