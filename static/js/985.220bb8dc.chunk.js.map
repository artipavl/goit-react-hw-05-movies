{"version":3,"file":"static/js/985.220bb8dc.chunk.js","mappings":"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","sources":["Api/Api.js","components/MovieDetalsInformation/Style.js","components/MovieDetalsInformation/MovieDetalsInformation.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '307015ca02e8a519abbd25ab35659215';\nconst axiosMovies = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\nconst LANGUAGE = 'language=en-US';\n\n// список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nexport async function getTrending() {\n  const get = await axiosMovies.get(`/trending/all/day?api_key=${KEY}`);\n  return get.data.results;\n}\n\n// пошук фільму за ключовим словом на сторінці фільмів.\nexport async function getSearchMovie(query, page) {\n  const get = await axiosMovies.get(\n    `/search/movie?api_key=${KEY}&${LANGUAGE}&query=${query}&page=${page}&include_adult=false`\n  );\n  return get.data.results;\n}\n\n// запит повної інформації про фільм для сторінки кінофільму.\nexport async function getMovieDetails(id) {\n  const get = await axiosMovies.get(`/movie/${id}?api_key=${KEY}&${LANGUAGE}`);\n  return get.data;\n}\n\n// запит інформації про акторський склад для сторінки кінофільму.\nexport async function getMovieCredits(id) {\n  const get = await axiosMovies.get(\n    `/movie/${id}/credits?api_key=${KEY}&${LANGUAGE}`\n  );\n  return get.data;\n}\n\n// запит оглядів для сторінки кінофільму.\nexport async function getMovieReviews(id, page) {\n  const get = await axiosMovies.get(\n    `/movie/${id}/reviews?api_key=${KEY}&${LANGUAGE}&page=${page}`\n  );\n  return get.data;\n}\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieInformationBox = styled.div`\n  display: flex;\n  gap: 15px;\n  border-bottom: 1px solid #000;\n  padding: 15px 0px;\n`;\n\nexport const MovieInformation = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const Box = styled.div`\n  padding: 15px;\n`;\n\nexport const GoBeck = styled(Link)`\n  padding: 10px;\n  background: #fafafa;\n  text-transform: none;\n  border-radius: 4px;\n  :hover,\n  :focus {\n    background: #afafaf;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Box, GoBeck, MovieInformation, MovieInformationBox } from './Style';\n\nconst MovieDetalsInformation = ({\n  data: {\n    genres,\n    release_date,\n    poster_path,\n    original_title,\n    overview,\n    popularity,\n  },\n}) => {\n  const location = useLocation();\n  const genresMovie = genres.map(genre => genre.name).join(', ');\n  const date = new Date(release_date).getFullYear();\n  return (\n    <Box>\n      <GoBeck to={location.state !== null ? location.state : '/'}>\n        {'<- Go beck'}\n      </GoBeck>\n      <MovieInformationBox>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSfjgn-WI1hCtQ9JSNOlgRYW1MHoer_lTeynw&usqp=CAU'\n          }\n          alt={original_title}\n          width=\"150\"\n        />\n        <MovieInformation>\n          <h2>\n            {original_title} ({date})\n          </h2>\n          <p>User Score: {Math.round(popularity)}%</p>\n          <b>Overview</b>\n          <p>{overview ? overview : '-'}</p>\n          <b>Ganres</b>\n          <p>{genresMovie.length > 1 ? genresMovie : '-'}</p>\n        </MovieInformation>\n      </MovieInformationBox>\n      <MovieInformationBox>\n        <MovieInformation>\n          <h2>Additinal information</h2>\n          <ul>\n            <li>\n              <Link to=\"cast\" state={location.state}>\n                cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" state={location.state}>\n                reviews\n              </Link>\n            </li>\n          </ul>\n        </MovieInformation>\n      </MovieInformationBox>\n    </Box>\n  );\n};\n\nMovieDetalsInformation.propTypes = {\n  data: PropTypes.shape({\n    genres: PropTypes.arrayOf(PropTypes.shape({ name: PropTypes.string }))\n      .isRequired,\n    release_date: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    original_title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    popularity: PropTypes.number.isRequired,\n  }),\n};\n\nexport default MovieDetalsInformation;\n","import { getMovieDetails } from 'Api/Api';\nimport MovieDetalsInformation from 'components/MovieDetalsInformation/MovieDetalsInformation';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then(\n        ({\n          id,\n          genres,\n          release_date,\n          poster_path,\n          original_title,\n          overview,\n          popularity,\n        }) =>\n          setData({\n            id,\n            genres,\n            release_date,\n            poster_path,\n            original_title,\n            overview,\n            popularity,\n          })\n      )\n      .catch(setError);\n  }, [movieId]);\n\n  if (error) {\n    return (\n      <>\n        <h1>{error.message}</h1>\n      </>\n    );\n  }\n\n  if (!data) {\n    return;\n  }\n\n  return (\n    <div>\n      <MovieDetalsInformation data={data} />\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["KEY","axiosMovies","axios","baseURL","LANGUAGE","getTrending","get","data","results","getSearchMovie","query","page","getMovieDetails","id","getMovieCredits","getMovieReviews","MovieInformationBox","styled","MovieInformation","Box","GoBeck","Link","genres","release_date","poster_path","original_title","overview","popularity","location","useLocation","genresMovie","map","genre","name","join","date","Date","getFullYear","to","state","src","alt","width","Math","round","length","movieId","useParams","useState","setData","error","setError","useEffect","then","catch","message","Suspense","fallback"],"sourceRoot":""}