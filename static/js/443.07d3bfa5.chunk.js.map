{"version":3,"file":"static/js/443.07d3bfa5.chunk.js","mappings":"8SAEMA,EAAM,mCACNC,EAAcC,EAAAA,EAAAA,OAAa,CAC/BC,QAAS,kCAELC,EAAW,iBAGV,SAAeC,IAAtB,+B,aAAO,O,oBAAA,oGACaJ,EAAYK,IAAZ,oCAA6CN,IAD1D,cACCM,EADD,yBAEEA,EAAIC,KAAKC,SAFX,kEAMA,SAAeC,EAAtB,oC,aAAO,O,oBAAA,WAA8BC,EAAOC,GAArC,uFACaV,EAAYK,IAAZ,gCACSN,EADT,YACgBI,EADhB,kBACkCM,EADlC,iBACgDC,EADhD,yBADb,cACCL,EADD,yBAIEA,EAAIC,KAAKC,SAJX,kEAQA,SAAeI,EAAtB,kC,aAAO,O,oBAAA,WAA+BC,GAA/B,uFACaZ,EAAYK,IAAZ,iBAA0BO,EAA1B,oBAAwCb,EAAxC,YAA+CI,IAD5D,cACCE,EADD,yBAEEA,EAAIC,MAFN,kEAMA,SAAeO,EAAtB,kC,aAAO,O,oBAAA,WAA+BD,GAA/B,uFACaZ,EAAYK,IAAZ,iBACNO,EADM,4BACgBb,EADhB,YACuBI,IAFpC,cACCE,EADD,yBAIEA,EAAIC,MAJN,kEAQA,SAAeQ,EAAtB,iDAAO,OAAP,oBAAO,WAA+BF,EAAIF,GAAnC,uFACaV,EAAYK,IAAZ,iBACNO,EADM,4BACgBb,EADhB,YACuBI,EADvB,iBACwCO,IAFrD,cACCL,EADD,yBAIEA,EAAIC,MAJN,kE,qHCPP,EA3BoB,WAClB,OAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAYF,EAAad,IAAI,KAWnC,OACE,kBAAMiB,SAVR,SAAkBC,GAChBA,EAAEC,iBAC4C,KAA1CD,EAAEE,cAAcC,SAASV,OAAOW,QAGpCP,EAAgB,CAAEQ,EAAGL,EAAEE,cAAcC,SAASV,OAAOW,QACrDV,EAAU,IACX,EAGC,WACE,kBACEY,KAAK,OACLC,KAAK,SACLH,MAAK,OAAEX,QAAF,IAAEA,EAAAA,EAAUK,EACjBU,SAAU,SAAAR,GAAC,OAAIN,EAAUM,EAAES,OAAOL,MAAvB,KAEb,mBAAQE,KAAK,SAAb,sBAGL,E,kBC1BYI,E,OAAOC,GAAAA,GAAH,qGCiBjB,EAhBwB,SAAC,GAAc,IAAZ5B,EAAW,EAAXA,KACnB6B,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACH,EAAD,UACG3B,EAAK+B,KAAI,SAAAC,GAAK,OACb,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAM1B,IAAM4B,MAAOL,EAAhC,SACGG,EAAMG,kBAFFH,EAAM1B,GADF,KASpB,ECmBD,EA7Be,WACb,OAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOT,EAAP,KAAaoC,EAAb,KAEA,GAAuBxB,EAAAA,EAAAA,MACjBF,GADN,eAC4BX,IAAI,KAiBhC,OAfAsC,EAAAA,EAAAA,YAAU,WACJ3B,IACFR,EAAAA,EAAAA,IAAeQ,EAAQ,GACpB4B,MAAK,SAAAtC,GAAI,OACRA,EAAK+B,KAAI,kBAAmC,CAC1CzB,GADO,EAAGA,GAEV6B,eAFO,EAAOA,eAGdX,KAHO,EAAuBA,KAAvB,GADD,IAOTc,MAAK,SAAAtC,GAAI,OAAIoC,EAAQpC,EAAZ,IACTuC,MAAMC,QAAQC,MAEpB,GAAE,CAAC/B,KAGF,4BACE,SAAC,EAAD,IACCV,EAAK0C,OAAS,IAAK,SAAC,EAAD,CAAiB1C,KAAMA,MAGhD,C","sources":["Api/Api.js","components/SearchMovie/SearchMovie.jsx","components/SearchMovieList/Style.js","components/SearchMovieList/SearchMovieList.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '307015ca02e8a519abbd25ab35659215';\nconst axiosMovies = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\nconst LANGUAGE = 'language=en-US';\n\n// список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nexport async function getTrending() {\n  const get = await axiosMovies.get(`/trending/all/day?api_key=${KEY}`);\n  return get.data.results;\n}\n\n// пошук фільму за ключовим словом на сторінці фільмів.\nexport async function getSearchMovie(query, page) {\n  const get = await axiosMovies.get(\n    `/search/movie?api_key=${KEY}&${LANGUAGE}&query=${query}&page=${page}&include_adult=false`\n  );\n  return get.data.results;\n}\n\n// запит повної інформації про фільм для сторінки кінофільму.\nexport async function getMovieDetails(id) {\n  const get = await axiosMovies.get(`/movie/${id}?api_key=${KEY}&${LANGUAGE}`);\n  return get.data;\n}\n\n// запит інформації про акторський склад для сторінки кінофільму.\nexport async function getMovieCredits(id) {\n  const get = await axiosMovies.get(\n    `/movie/${id}/credits?api_key=${KEY}&${LANGUAGE}`\n  );\n  return get.data;\n}\n\n// запит оглядів для сторінки кінофільму.\nexport async function getMovieReviews(id, page) {\n  const get = await axiosMovies.get(\n    `/movie/${id}/reviews?api_key=${KEY}&${LANGUAGE}&page=${page}`\n  );\n  return get.data;\n}\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst SearchMovie = () => {\n  const [search, setSearch] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchUrl = searchParams.get('q');\n\n  function onSubmit(e) {\n    e.preventDefault();\n    if (e.currentTarget.elements.search.value === '') {\n      return;\n    }\n    setSearchParams({ q: e.currentTarget.elements.search.value });\n    setSearch('');\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        name=\"search\"\n        value={search ?? searchUrl}\n        onChange={e => setSearch(e.target.value)}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchMovie;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  padding: 15px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { List } from './Style';\n\nconst SearchMovieList = ({ data }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {data.map(movie => (\n        <li key={movie.id}>\n          <Link to={`${movie.id}`} state={location}>\n            {movie.original_title}\n          </Link>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nexport default SearchMovieList;\n","import { getSearchMovie } from 'Api/Api';\nimport SearchMovie from 'components/SearchMovie/SearchMovie';\nimport SearchMovieList from 'components/SearchMovieList/SearchMovieList';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [data, setData] = useState([]);\n\n  const [searchParams] = useSearchParams();\n  const search = searchParams.get('q');\n\n  useEffect(() => {\n    if (search) {\n      getSearchMovie(search, 1)\n        .then(data =>\n          data.map(({ id, original_title, name }) => ({\n            id,\n            original_title,\n            name,\n          }))\n        )\n        .then(data => setData(data))\n        .catch(console.error);\n    }\n  }, [search]);\n\n  return (\n    <div>\n      <SearchMovie />\n      {data.length > 0 && <SearchMovieList data={data} />}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["KEY","axiosMovies","axios","baseURL","LANGUAGE","getTrending","get","data","results","getSearchMovie","query","page","getMovieDetails","id","getMovieCredits","getMovieReviews","useState","search","setSearch","useSearchParams","searchParams","setSearchParams","searchUrl","onSubmit","e","preventDefault","currentTarget","elements","value","q","type","name","onChange","target","List","styled","location","useLocation","map","movie","to","state","original_title","setData","useEffect","then","catch","console","error","length"],"sourceRoot":""}